<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fade-color.github.io</id>
    <title>Gridea</title>
    <updated>2021-04-17T09:44:02.229Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://fade-color.github.io"/>
    <link rel="self" href="https://fade-color.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://fade-color.github.io/images/avatar.png</logo>
    <icon>https://fade-color.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[JupyterLab 显示中文字体]]></title>
        <id>https://fade-color.github.io/post/Jupyterlab-xian-shi-zhong-wen-zi-ti/</id>
        <link href="https://fade-color.github.io/post/Jupyterlab-xian-shi-zhong-wen-zi-ti/">
        </link>
        <updated>2021-04-17T09:28:28.000Z</updated>
        <content type="html"><![CDATA[<h3 id="查看当前系统jupyterlab支持的所有字体">查看当前系统JupyterLab支持的所有字体</h3>
<pre><code class="language-python">from matplotlib.font_manager import FontManager

mpl_fonts = set(f.name for f in FontManager().ttflist)

print('all font list get from matplotlib.font_manager:')
for f in sorted(mpl_fonts):
    print('\t' + f)
</code></pre>
<p>打印结果如下：</p>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2021/04/17/y85rFj3HD6aTdsL.png" alt="image-20210417092307128" loading="lazy"></figure>
<p>选择一款中文字体即可，这里我选择的是苹果的冬青黑体：&quot;Hiragino Sans GB&quot;，windows用户可以选择黑体（SimHei）</p>
<h3 id="删除缓存文件">删除缓存文件</h3>
<p>Mac：</p>
<ul>
<li>
<pre><code class="language-bash">cd ~/.matplotlib
rm -r *
</code></pre>
</li>
</ul>
<p>Windows：</p>
<ul>
<li>
<p>进入到自己的用户目录文件夹下，在资源管理器的“查看”选项卡中勾选“显示隐藏文件及目录”即可看到<code>.matplotlib</code>文件夹，或者直接在资源管理器的路径栏中在路径后面手动输入<code>.matplotlib</code>后回车即可进入该文件夹</p>
</li>
<li>
<p>然后把该文件夹内的资源删除即可。</p>
</li>
</ul>
<h3 id="修改matplotlibrc配置文件">修改matplotlibrc配置文件</h3>
<p>Mac：</p>
<ul>
<li>
<p>输入<code>vim ~/.matplotlib/matplotlibrc</code>：</p>
<p>然后将文件内容修改为：</p>
<pre><code>font.family         : sans-serif
font.sans-serif         : Hiragino Sans GB
axes.unicode_minus  : False
</code></pre>
<p><code>font.sans-serif</code>后面改为自己选择的字体即可。</p>
</li>
</ul>
<p>Win：</p>
<ul>
<li>在<code>.matplotlib</code>文件夹中新建matplotlibrc文件，把上面内容粘贴进去后<code>.txt</code>后缀名删掉即可。</li>
</ul>
<h3 id="重启jupyterlab内核">重启JupyterLab内核</h3>
<p>接下来重启一下JupyterLab内核即可看到效果。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac设置终端ssh自动登录]]></title>
        <id>https://fade-color.github.io/post/mac-she-zhi-zhong-duan-ssh-zi-dong-deng-lu/</id>
        <link href="https://fade-color.github.io/post/mac-she-zhi-zhong-duan-ssh-zi-dong-deng-lu/">
        </link>
        <updated>2021-04-05T09:32:37.000Z</updated>
        <content type="html"><![CDATA[<h3 id="1-安装expect">1. 安装expect</h3>
<pre><code class="language-bash">brew install expect
</code></pre>
<h3 id="2-编写expect登录脚本">2. 编写expect登录脚本</h3>
<p>输入 <code>touch login.exp</code> 新建脚本</p>
<p>接着输入 <code>vim ./login.exp</code> 编辑脚本，代码如下：</p>
<pre><code class="language-bash">#!/usr/bin/expect -f

# 定义第一个空格后的第一个变量是host
set hostname [lindex $argv 0]
# 定义第一个空格后的第二个变量是用户名
set username [lindex $argv 1]
# 定义第一个空格后的第三个变量是密码
set password [lindex $argv 2]
# 等待登录输入密码的时间，单位秒
set timeout 30
set force_conservative 1
if {$force_conservative} {
  set send_slow {128 .1}
}
# 执行登录ssh
spawn ssh $username@$hostname;

expect {
        # 出现yes/no 时输入yes
    &quot;yes/no&quot; {
    send -s &quot;yes\r&quot;; exp_continue
    }
    # 出现password 自动输入变量密码
    &quot;password&quot; {
        send -s &quot;$password\r&quot;;
    }
}
# 执行过后把权限交给终端
interact
</code></pre>
<p>这样就可以通过命令<code>expect ./login.exp IP地址 用户名 密码</code>来进行登录服务器了。</p>
<h3 id="3-编写bash脚本">3. 编写bash脚本</h3>
<p>分别输入</p>
<pre><code class="language-bash">touch sshlogin.sh
vim ./sshlogin.sh
</code></pre>
<p>在脚本中粘贴以下代码（注意修改脚本中的ip地址用户名密码信息）：</p>
<pre><code class="language-bash">#!/bin/bash

clear
RED='\033[0;31m'
GRN='\033[0;32m'
BLU='\033[0;34m'
NC='\033[0m'
# 获取执行login.exp路径
pwdpath=$(cd &quot;$(dirname &quot;$0&quot;)&quot;;pwd)
# ssh登录脚本指令, 注意这里要跟脚本命名要一致
ssh=&quot;expect $pwdpath/login.exp&quot;

# menu.sh

echo &quot;---------------------------------------------------------------&quot;
echo &quot;|              __                                             |&quot;
echo &quot;|            _/  |_  ____ ______      ____  __ __  ____       |&quot;
echo &quot;|            \   __\/  _ \\____ \    / ___\|  |  \/    \       |&quot;
echo &quot;|             |  | (  &lt;_&gt; )  |_&gt; &gt;  / /_/  &gt;  |  /   |  \     |&quot;
echo &quot;|             |__|  \____/|   __/   \___  /|____/|___|  /     |&quot;
echo &quot;|                         |__|     /_____/            \/      |&quot;
echo &quot;---------------------------------------------------------------&quot;

# 服务器提示目录，可以根据自己需求修改
echo &quot;--------------------------------------&quot;
echo &quot;please enter your Server:&quot;
echo -e &quot;(1) ${GRN}Linux Tencent qinian${NC}&quot;
echo &quot;(2) Linux Tencent(disabled)&quot;
echo &quot;(3) exit&quot;
echo &quot;--------------------------------------&quot;
read -p &quot;请选择服务器:&quot; input

case ${input} in
    1)
    echo -e &quot;${GRN}Linux Tencent qinian${NC}&quot;
    $ssh ip地址 用户名 密码
    sleep 1;;
    2)
    # echo -e &quot;${GRN}Linux Tencent${NC}&quot;
    # $ssh ip地址 用户名 密码
    sleep 1;;
    3)
    exit;;
esac
</code></pre>
<h3 id="4-修改脚本权限">4. 修改脚本权限</h3>
<pre><code class="language-bash">chmod 755 sshlogin.sh
</code></pre>
<p>修改完成后就可以使用 <code>./sshlogin.sh</code> 命令来执行脚本</p>
<h3 id="5-运行脚本">5. 运行脚本</h3>
<p>输入 <code>./sshlogin.sh</code> 命令来执行脚本，出现以下界面：</p>
<figure data-type="image" tabindex="1"><img src="https://i.loli.net/2021/03/25/zc7eWR25rCXOpZf.png" alt="image-20210325215920244" loading="lazy"></figure>
<p>输入序号后回车即可。</p>
<figure data-type="image" tabindex="2"><img src="https://i.loli.net/2021/03/25/t9L4fdlnYXF1hKR.png" alt="image-20210325220057506" loading="lazy"></figure>
]]></content>
    </entry>
</feed>